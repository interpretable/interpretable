name: Publish Docker image

on:
  release:
    types: [published]
  pull_request:
    types:
      - synchronize
  push:
    branches:
      - interpretable

jobs:
  push_to_registries:
    name: Push Docker image to multiple registries
    runs-on: ubuntu-latest
    permissions:
      packages: write
      contents: read
    steps:
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

#      - name: Log in to Docker Hub
#        uses: docker/login-action
#        with:
#          username: ${{ secrets.DOCKER_USERNAME }}
#          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Log in to the Container registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: |
            ghcr.io/${{ github.repository }}

#          images: |
#            my-docker-hub-namespace/my-docker-hub-repository
#            ghcr.io/${{ github.repository }}

      - name: Build and push Docker images
        uses: docker/build-push-action@v3
        with:
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
        env:
          REACT_APP_GOOGLE_LOGIN: false
          REACT_APP_SUPPORT_EMAIL: support@intepretable.io
          REACT_APP_NAME: Interpretable
          REACT_APP_DOMAIN: interpretable.projets.erasme.org
          REACT_APP_API_URL: https://interpretable-api.projets.erasme.org

  redeploy:
    name: Redeploy image on cluster
    runs-on: ubuntu-latest
    needs: push_to_registries
    env:
      KUBECONFIG: ${{ github.workspace }}/kube.config.yml
    steps:
      - uses: actions/checkout@v3
      - uses: azure/setup-kubectl@v3
        with:
          version: 'v1.23.14'
        id: install
      - run: kubectl config set-credentials prod-erasme-scw --token=${{ secrets.KUBE_TOKEN }} > /dev/null
      - run: kubectl --insecure-skip-tls-verify rollout restart deployment interpretable
